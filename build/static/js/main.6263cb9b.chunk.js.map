{"version":3,"sources":["Components/toDo/code.png","Components/toDo/photography.png","Components/toDo/videographer.png","Components/aboutMe/me.jpg","Components/frontPage/BrunoSky3_f.jpg","Components/frontPage/frontPage.jsx","Components/toDo/toDo.jsx","Components/aboutMe/aboutMe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FrontPage","useState","sky","setsky","b1","setb1","window","innerWidth","className","theme","mode","defaultSelectedKeys","Item","key","href","target","onClick","ghost","style","fontSize","marginLeft","ToDo","Title","Typography","console","log","Error","src","ImgPhoto","preview","level","ImgVideo","ImgCode","AboutMe","Me","textAlign","paddingLeft","paddingRight","paddingTop","paddingBottom","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,gC,sGCA3CD,EAAOC,QAAU,IAA0B,yC,kLCoD5BC,G,oBA9CE,WAAO,IAAD,EAEGC,mBAAS,SAFZ,mBAEZC,EAFY,KAEPC,EAFO,OAGCF,mBAAS,uBAHV,mBAGZG,EAHY,KAGRC,EAHQ,OAImBJ,mBAAUK,OAAOC,YAJpC,6BAkBnB,OACA,6BACA,yBAAKC,UAAWN,GACZ,yBAAKM,UAAU,SACX,6BACI,kBAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,MACvD,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KAAI,uBAAGC,KAAK,qFAAqFC,OAAO,UAApG,SAG3B,yBAAKP,UAAU,kBACf,yBAAKA,UAAU,gBACX,8BACA,6BAAK,kBAAC,IAAD,CAAQQ,QAxBN,WACJ,UAARd,GACCC,EAAO,UACPE,EAAM,wBAENF,EAAO,SACPE,EAAM,yBAkBiCY,MAAM,QAASb,IAClD,+BAEA,yBAAKI,UAAU,eACX,yBAAKA,UAAU,YAAW,0BAAMU,MAAO,CAACC,SAAU,OAAQC,WAAY,SAA5C,gBAAwE,6BAAK,0BAAMF,MAAO,CAACC,SAAU,OAAQC,WAAY,SAA5C,iBACvG,+BAEJ,iCAIZ,iC,gFCpBWC,EAhBF,WAAO,IAETC,EAASC,IAATD,MAGP,OADAE,QAAQC,IAAIC,OAEZ,yBAAKlB,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,WAAU,yBAAKA,UAAU,eAAc,kBAAC,IAAD,CAAOA,UAAU,UAAUmB,IAAKC,IAAUC,SAAS,KAAc,kBAACP,EAAD,CAAOQ,MAAO,GAAd,gBACvH,yBAAKtB,UAAU,WAAU,yBAAKA,UAAU,eAAc,kBAAC,IAAD,CAAOA,UAAU,UAAUmB,IAAKI,IAAUF,SAAS,KAAc,kBAACP,EAAD,CAAOQ,MAAO,GAAd,UACvH,yBAAKtB,UAAU,WAAU,yBAAKA,UAAU,eAAc,kBAAC,IAAD,CAAOA,UAAU,UAAUmB,IAAKK,IAASH,SAAS,KAAc,kBAACP,EAAD,CAAOQ,MAAO,GAAd,sB,kBCEnHG,G,OAjBC,WAAO,IAEZX,EAASC,IAATD,MAEP,OACI,yBAAKd,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YAAW,kBAAC,IAAD,CAAOA,UAAU,KAAKmB,IAAKO,OACrD,yBAAKhB,MAAO,CAACiB,UAAW,UAAWC,YAAa,MAAOC,aAAc,MAAOC,WAAY,MAAOC,cAAe,QAAQ,kBAACjB,EAAD,CAAOQ,MAAO,GAAd,YAAiC,kBAACR,EAAD,CAAOQ,MAAO,GAAd,uW,qBCKxJU,MAZf,WACE,OACE,yBAAKhC,UAAU,UACb,kBAAC,EAAD,MAEC,kBAAC,EAAD,MACD,kBAAC,EAAD,QCDciC,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,a","file":"static/js/main.6263cb9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.45bd2dc7.png\";","module.exports = __webpack_public_path__ + \"static/media/photography.05fd1ada.png\";","module.exports = __webpack_public_path__ + \"static/media/videographer.2d544ba7.png\";","module.exports = __webpack_public_path__ + \"static/media/me.2cf05d61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BrunoSky3_f.b096c2ac.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { PageHeader, Menu, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './frontPageStyle.css';\r\nimport Austronaut from './BrunoSky3_f.jpg';\r\n\r\nconst FrontPage= () => {\r\n\r\n    const [sky, setsky] = useState(\"fundo\");\r\n    const [b1, setb1] = useState(\"Ver Imagem Original\")\r\n    const [screenWidth, setScreenWidth] = useState (window.innerWidth);\r\n\r\n    const mudarFundo = () => {\r\n        if(sky === \"fundo\"){\r\n            setsky(\"fundo2\")\r\n            setb1(\"Ver Imagem Editada\")\r\n        }else{\r\n            setsky(\"fundo\")\r\n            setb1(\"Ver Imagem Original\")\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n    <div>\r\n    <div className={sky}>\r\n        <div className=\"front\">  \r\n            <div>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><a href=\"https://drive.google.com/file/d/1_-aYeECcGk8K3JigyWk9G1x-SAiJD_QQ/view?usp=sharing\" target=\"_blank\">CV</a></Menu.Item>\r\n                </Menu> \r\n            </div>\r\n            <div className=\"coverAndTittle\">  \r\n            <div className=\"buttonManage\">\r\n                <div></div>\r\n                <div><Button onClick={mudarFundo}  ghost=\"true\" >{b1}</Button></div>\r\n                <div></div>\r\n            </div>\r\n                <div className=\"beginingBan\">\r\n                    <div className=\"banRight\"><text style={{fontSize: \"10vw\", marginLeft: \"30px\"}}>My Portfolio</text><br/><text style={{fontSize: \"20px\", marginLeft: \"30px\"}}>Daniel Marto</text></div>\r\n                    <div></div>\r\n                </div>\r\n                <div ></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div ></div>    \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default FrontPage;","import React, { useState } from 'react';\r\nimport { PageHeader, Menu, Button, Image, Typography } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './ss.css';\r\nimport ImgCode from \"./code.png\";\r\nimport ImgPhoto from \"./photography.png\";\r\nimport ImgVideo from \"./videographer.png\";\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './ss.css';\r\n\r\nconst ToDo = () => {\r\n\r\n    const {Title} = Typography; \r\n\r\n    console.log(Error);\r\n    return(\r\n    <div className=\"toDoForma\">\r\n        <div className=\"toDo\">\r\n            <div className=\"titulos\"><div className=\"iconesCaixa\"><Image className=\"iconesI\" src={ImgPhoto} preview={false}/></div><Title level={5}>PHOTOGRAPHY</Title></div>\r\n            <div className=\"titulos\"><div className=\"iconesCaixa\"><Image className=\"iconesI\" src={ImgVideo} preview={false}/></div><Title level={5}>VIDEO</Title></div>\r\n            <div className=\"titulos\"><div className=\"iconesCaixa\"><Image className=\"iconesI\" src={ImgCode} preview={false}/></div><Title level={5}>WEB DEVELOPING</Title></div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ToDo;","import React, { useState, useEffect } from 'react';\r\nimport { PageHeader, Menu, Button, Image, Typography } from 'antd';\r\nimport Me from './me.jpg';\r\nimport 'antd/dist/antd.css';\r\nimport './aboutMeStyle.css';\r\n\r\nconst AboutMe = () => {\r\n\r\n    const {Title} = Typography; \r\n\r\n    return(\r\n        <div className=\"sobreMim\">\r\n            <div className=\"conteudo\">\r\n                <div className=\"euImagem\"><Image className=\"eu\" src={Me} /></div>\r\n                <div style={{textAlign: 'justify', paddingLeft: '2vw', paddingRight: '3vw', paddingTop: '2vh', paddingBottom: '2vh'}}><Title level={3}>About Me</Title><Title level={4} >I like to think of myself as someone who is eager to learn new subjects and to develop my skills, like\r\nthis website. This website is my first project in ReactJs, CSS and JavaScript. I spent my quarentine\r\ndoing courses of React and JavaScript. However, I believe that teamwork is the answer for any problem\r\nwe may encounter in any professional career.</Title></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\nimport FrontP from './Components/frontPage/frontPage.jsx';\nimport ToDo from './Components/toDo/toDo.jsx';\nimport AboutMe from './Components/aboutMe/aboutMe.jsx';\nimport PhotosMe from './Components/Photography/photos.jsx';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"appLay\">\n      <FrontP />\n     \n       <AboutMe />\n      <ToDo />\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}